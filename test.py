from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table, TableStyle, Image
from reportlab.lib.pagesizes import A4
from reportlab.lib import colors
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.lib.units import inch  # ✅ Add this line
from reportlab.graphics.shapes import Drawing
from reportlab.graphics.barcode.qr import QrCodeWidget


def generate_reimbursement_report(data, output_path):
    doc = SimpleDocTemplate(output_path, pagesize=A4, rightMargin=40, leftMargin=40, topMargin=60, bottomMargin=30)
    elements = []
    styles = getSampleStyleSheet()
    normal = styles["Normal"]
    bold = styles["Heading4"]
    para_style = ParagraphStyle(name="Custom", parent=normal, fontSize=10, leading=14)

    # Logo (optional)
    try:
        logo = Image("static/logo.png", width=60, height=60)
        logo.hAlign = 'LEFT'
        elements.append(logo)
    except:
        pass

    # Heading
    elements.append(Paragraph("<b>Fr. C Rodrigues Institute of Technology, Vashi</b>", styles["Heading1"]))
    elements.append(Paragraph("Reimbursement Final Report", styles["Title"]))
    elements.append(Spacer(1, 12))

    # Student Info
    elements.append(Paragraph(f"<b>Student Name:</b> {data['student_name']}", para_style))
    elements.append(Paragraph(f"<b>Email:</b> {data['email']}", para_style))
    elements.append(Paragraph(f"<b>Department:</b> {data['department']}", para_style))
    if 'transaction_ref' in data:
        elements.append(Paragraph(f"<b>Transaction Ref:</b> {data['transaction_ref']}", para_style))
    elements.append(Spacer(1, 12))

    # Table
    table_data = [[
        Paragraph("<b>Purpose</b>", para_style),
        Paragraph("<b>Amount (₹)</b>", para_style),
        Paragraph("<b>Status</b>", para_style),
        Paragraph("<b>Date Submitted</b>", para_style)
    ], [
        Paragraph(data['purpose'], para_style),
        f"₹{data['amount']}",
        data['accountant_status'],
        str(data['submitted_at']).split('.')[0]
    ]]
    table = Table(table_data, colWidths=[3.2 * inch, 1.2 * inch, 1.2 * inch, 2 * inch])
    table.setStyle(TableStyle([
        ('BACKGROUND', (0, 0), (-1, 0), colors.lightblue),
        ('TEXTCOLOR', (0, 0), (-1, 0), colors.white),
        ('ALIGN', (1, 1), (-1, -1), 'CENTER'),
        ('VALIGN', (0, 0), (-1, -1), 'TOP'),
        ('BOX', (0, 0), (-1, -1), 0.8, colors.black),
        ('GRID', (0, 0), (-1, -1), 0.4, colors.grey),
        ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
        ('FONTSIZE', (0, 0), (-1, -1), 9),
        ('LEFTPADDING', (0, 0), (-1, -1), 6),
        ('RIGHTPADDING', (0, 0), (-1, -1), 6),
    ]))
    elements.append(table)
    elements.append(Spacer(1, 20))

    # Remarks
    elements.append(Paragraph("<b>Accountant Remarks:</b>", bold))
    elements.append(Paragraph(data['accountant_remarks'], para_style))
    elements.append(Spacer(1, 8))

    for role in ['teacher', 'hod', 'principal']:
        elements.append(Paragraph(f"<b>{role.capitalize()} Status:</b> {data.get(f'{role}_status', '')}", para_style))
        elements.append(Paragraph(f"<b>{role.capitalize()} Remarks:</b> {data.get(f'{role}_remarks', '')}", para_style))
        elements.append(Spacer(1, 8))

    elements.append(Spacer(1, 40))
    elements.append(Paragraph("__________________________", para_style))
    elements.append(Paragraph("Signature (Accounts Dept)", para_style))
    elements.append(Spacer(1, 20))

    # QR Code
    if 'transaction_ref' in data:
        qr_code = QrCodeWidget(data['transaction_ref'])
        bounds = qr_code.getBounds()
        size = 50
        width = bounds[2] - bounds[0]
        height = bounds[3] - bounds[1]
        d = Drawing(size, size, transform=[size / width, 0, 0, size / height, 0, 0])
        d.add(qr_code)
        elements.append(d)

    # Footer
    elements.append(Spacer(1, 20))
    footer = Paragraph("<i>Generated by Reimbursement Portal - FCRIT</i>", para_style)
    elements.append(footer)

    doc.build(elements)


# Your test data
data = {
    'student_name': 'Melissa Sequeira',
    'email': 'melissasequeira572@gmail.com',
    'department': 'IT',
    'purpose': 'We had published our research paper in XYZ journal',
    'amount': '5000',
    'submitted_at': '2025-07-03 21:56:08',
    'accountant_status': 'Approved',
    'accountant_remarks': 'Great, collect the cheque from office',
    'teacher_status': 'Verified',
    'teacher_remarks': 'Good work',
    'hod_status': 'Approved',
    'hod_remarks': 'Permitted',
    'principal_status': 'Approved',
    'principal_remarks': 'Proceed with release',
    'transaction_ref': 'pay_QoTKAhkoofC6fv'
}

# Call the function to test
generate_reimbursement_report(data, "test_reimbursement_report.pdf")
print("✅ PDF generated successfully.")
